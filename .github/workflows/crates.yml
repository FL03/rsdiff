name: crates.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  CARGO_TERM_COLOR: always

on:
  release:
    types: [ published ]
  repository_dispatch:
    types: [ publish ]
  workflow_dispatch:

jobs:
  core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: [ core ]
    env:
      PACKAGE: ${{ github.event.repository.name }}-${{ matrix.features }}
    steps:
      - uses: actions/checkout@v4
      - 
        name: rustup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: publish (${{ env.PACKAGE }})
        run: cargo publish --all-features -v -p ${{ env.PACKAGE }}
  features:
    needs: core
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: [ derive, graphs, macros, math ]
    env:
      PACKAGE: ${{ github.event.repository.name }}-${{ matrix.features }}
    steps:
      - uses: actions/checkout@v4
      - 
        name: rustup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: publish (${{ env.PACKAGE }})
        run: cargo publish --all-features -v -p ${{ env.PACKAGE }}
  publish:
    env:
      PACKAGE: ${{ github.event.repository.name }}
    needs: [ core, features ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - 
        name: rustup
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true
      - 
        name: publish (${{ env.PACKAGE }})
        run: cargo publish --all-features -v -p ${{ env.PACKAGE }}